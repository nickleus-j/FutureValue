@using FutureValue.Web.ViewModels
@model FutureValue.Web.ViewModels.ProjectionFormViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Projection Form</h4>
<hr />
<div class="row">
    <div class="col-sm-12 col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group d-none">
                <label asp-for="ID" class="control-label"></label>
                <input asp-for="ID" class="form-control" type="hidden" value="1" />
                <span asp-validation-for="ID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control Name" value="New Projection" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PresetValue" class="control-label"></label>
                <input asp-for="PresetValue" class="form-control PresetValue" value="0" />
                <span asp-validation-for="PresetValue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LowerBoundInterest" class="control-label"></label>
                <input asp-for="LowerBoundInterest" class="form-control LowerBoundInterest" value="0" />
                <span asp-validation-for="LowerBoundInterest" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UpperBoundInterest" class="control-label"></label>
                <input asp-for="UpperBoundInterest" class="form-control UpperBoundInterest" value="0" />
                <span asp-validation-for="UpperBoundInterest" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IncrementalRate" class="control-label"></label>
                <input asp-for="IncrementalRate" class="form-control IncrementalRate" value="0" />
                <span asp-validation-for="IncrementalRate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MaturityYears" class="control-label"></label>
                <input asp-for="MaturityYears" class="form-control MaturityYears" value="1"/>
                <span asp-validation-for="MaturityYears" class="text-danger"></span>
            </div>
            <div class="form-group d-none">
                <label asp-for="DateCreated" class="control-label hidden"></label>
                <input asp-for="DateCreated" class="form-control" type="hidden" value="@DateTimeOffset.UtcNow" />
                <span asp-validation-for="DateCreated" class="text-danger"></span>
            </div>
            <div class="form-group">
                <a class="btn btn-success btn-preview">Preview</a>
                <a class="btn btn-primary btn-create">Save</a>
            </div>
        </form>
    </div>
    <div class="col-sm-12 col-md-8 projection-panel">
        <partial name="~/Views/ProjectionYear/Index.cshtml" model="new List<ProjectionYearViewModel>()" />
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var ProjectionIndex = {
            OnPreviewButtonClick: function () {
                var caller = new Service();
                if (document.querySelector(".input-validation-error")) {
                    return;
                }
                caller.postWithData(AppUrl + "api/Projection", {
                    id: 0,
                    "presetValue": parseFloat(document.querySelector(".PresetValue").value),
                    "name": "unnamed",
                    "lowerBoundInterest": parseFloat(document.querySelector(".LowerBoundInterest").value),
                    "upperBoundInterest": parseFloat(document.querySelector(".UpperBoundInterest").value),
                    "incrementalRate": parseFloat(document.querySelector(".IncrementalRate").value),
                    "maturityYears": parseFloat(document.querySelector(".MaturityYears").value),
                    "dateCreated": "2022-08-24T23:25:36.345Z"
                }, function (data) {
                    let panel = document.querySelector(".projection-panel");
                    let tbl = document.querySelector(".projection-tbl");
                    let tBody = tbl.querySelector("tbody");
                    tbl.classList.remove("d-none");
                    tBody.innerHTML = "";
                    for (let i = 0; i < data.length; i++) {
                        let row = document.createElement("tr");
                        row.appendChild(DomExtension.MakeElement("td", "" + data[i].year));
                        row.appendChild(DomExtension.MakeElement("td", "" + data[i].startValue));
                        row.appendChild(DomExtension.MakeElement("td", "" + data[i].interestRate));
                        row.appendChild(DomExtension.MakeElement("td", "" + data[i].futureValue));
                        tBody.appendChild(row);
                    }

                }, function (e) { 
                    console.log("error " + e); 
                });
            },
            OnCreateButtonClick:function(){
                var caller = new Service();
                if (document.querySelector(".input-validation-error")) {
                    return;
                }
                caller.postWithData(AppUrl + "api/ProjectionForm", {
                    id: 0,
                    "presetValue": parseFloat(document.querySelector(".PresetValue").value),
                    "name": document.querySelector(".Name").value,
                    "lowerBoundInterest": parseFloat(document.querySelector(".LowerBoundInterest").value),
                    "upperBoundInterest": parseFloat(document.querySelector(".UpperBoundInterest").value),
                    "incrementalRate": parseFloat(document.querySelector(".IncrementalRate").value),
                    "maturityYears": parseFloat(document.querySelector(".MaturityYears").value),
                    "dateCreated": "2022-08-24T23:25:36.345Z"
                }, function (data) {
                    window.location.href = '/ProjectionForm';

                }, function (e) {
                    console.log("error " + e);
                });
            },
            AddClickEventToPreviewBtn: function () {
                document.querySelector(".projection-tbl").classList.add("d-none");
                var btnPreview = document.querySelector(".btn-preview");
                btnPreview.addEventListener('click', function () {
                    ProjectionIndex.OnPreviewButtonClick();
                });
            },
            AddClickEventToCreateBtn: function () {
                let btnCreate = document.querySelector(".btn-create");
                btnCreate.addEventListener('click', function () {
                    ProjectionIndex.OnCreateButtonClick();
                });
            }
        };
        window.onload = (event) => {
            ProjectionIndex.AddClickEventToPreviewBtn();
            ProjectionIndex.AddClickEventToCreateBtn();
        }
    </script>
}
